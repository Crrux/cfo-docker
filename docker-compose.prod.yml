services:
  front:
    container_name: cfo-frontend
    build:
      context: ./front
      dockerfile: Dockerfile.production
    restart: unless-stopped

  back:
    container_name: cfo-backend
    build:
      context: ./back
      dockerfile: Dockerfile.production
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    depends_on:
      - db

  nginx:
    container_name: cfo-nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile.production
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - front
      - back
    restart: unless-stopped
      
  db:
    container_name: cfo-db-prod
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - type: volume
        source: db-prod-cfo
        target: /var/lib/postgresql/data
      - type: bind
        source: ./db/init
        target: /docker-entrypoint-initdb.d

volumes:
  db-prod-cfo:
    external: true

networks:
  default:
    driver: bridge
    name: prod_network_cfo